/*
* Copyright 2024 Google LLC
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     https://www.apache.org/licenses/LICENSE-2.0
*
*     Unless required by applicable law or agreed to in writing, software
*     distributed under the License is distributed on an "AS IS" BASIS,
*     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*     See the License for the specific language governing permissions and
*     limitations under the License.
*/

package v1

import metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"

// +genclient
// +kubebuilder:object:root=true
// +kubebuilder:resource:categories=gateway-api
// +kubebuilder:storageversion
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Age",type=date,JSONPath=`.metadata.creationTimestamp`

// GCPSessionAffinityFilter provides a way to configure session affinity for a RouteAction.
type GCPSessionAffinityFilter struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	// Spec defines the desired state of GCPSessionAffinityFilter.
	Spec GCPSessionAffinitySpec `json:"spec"`

	// Status defines the current state of GCPSessionAffinityFilter.
	Status GCPSessionAffinityFilterStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GCPSessionAffinityFilterList contains a list of GCPSessionAffinityFilter.
type GCPSessionAffinityFilterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []GCPSessionAffinityFilter `json:"items"`
}

// GCPSessionAffinitySpec defines the desired state of GCPSessionAffinityFilter and is shared with
// GCPSessionAffinityPolicy.
type GCPSessionAffinitySpec struct {
	StatefulGeneratedCookie *StatefulGeneratedCookieConfig `json:"statefulGeneratedCookie,omitempty"`

	// Future session affinity types may be added here. Unless explicitly stated otherwise,
	// fields within this struct are mutually exclusive with one another.
}

// StatefulGeneratedCookieConfig defines cookie-based stateful session affinity where the date plane
// supplies a “session cookie”  with the name "GSSA" which encodes a specific destination host and
// each request containing that cookie will be directed to that host as long as the destination host
// remains up and healthy.
// GCP will manage the session cookie but the client application code is responsible for copying the
// cookie from each RPC in the session to the next.
type StatefulGeneratedCookieConfig struct {
	// The cookie TTL value for the Set-Cookie header generated by the data plane. The lifetime of the
	// cookie may be set to a value from 1 to 86400 seconds (24 hours) inclusive.
	CookieTTLSeconds *int64 `json:"cookieTtlSeconds"`
}

// GCPSessionAffinityFilterStatus defines the observed state of GCPSessionAffinityFilter.
type GCPSessionAffinityFilterStatus struct {
	// Conditions describe the current conditions of the GCPSessionAffinityFilter.
	//
	// +optional
	// +listType=map
	// +listMapKey=type
	// +kubebuilder:validation:MaxItems=8
	Conditions []metav1.Condition `json:"conditions,omitempty"`
}
